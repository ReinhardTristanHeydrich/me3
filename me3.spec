%{?mingw_package_header}
%global source_date_epoch_from_changelog 0
# The following tag is to get correct syntax highlighting for this file in vim text editor
# vim: syntax=spec

# git_dir_name returns repository name derived from remote Git repository URL
Name: me3

# git_dir_version returns version based on commit and tag history of the Git project
Version:    0.5.0

# This can be useful later for adding downstream patches
Release:    1%{?dist}

# Basic description of the package
Summary:    Hello rpkg package.

# License. Hopefully free or at least open-source. We assume GPLv2+ here.
License:    GPLv2+

Source0:    me3-%{version}.tar.gz
BuildArch: noarch
BuildRequires: curl mingw64-gcc mingw64-binutils mingw64-crt mingw64-headers mingw64-filesystem gcc gcc-annobin

# Home page of the project. Can also point to the public Git repository page.
URL:        https://github.com/garyttierney/me3

# Detailed information about the source Git repository and the source commit
# for the created rpm package

# git_dir_pack macro places the repository content (the source files) into a tarball
# and returns its filename. The tarball will be used to build the rpm.

# More detailed description of the package
%description
This is a hello world package.

# The following four sections already describe the rpm build process itself.
# prep will extract the tarball defined as Source above and descend into it.
%prep
%autosetup -n me3-%{version}

# This will invoke `make` command in the directory with the extracted sources.
%build
export RUSTUP_TOOLCHAIN=nightly
export RUSTUP_HOME=%{_builddir}/rustup
export CARGO_HOME=%{_builddir}/cargo

# 2. Download and install rustup.sh. The --no-modify-path flag is important
#    because we will manage the path ourselves.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-modify-path --default-toolchain none

# 3. Add the cargo bin directory to the PATH for this build script.
source "%{_builddir}/cargo/env"

rustup toolchain install $RUSTUP_TOOLCHAIN

rustup target add x86_64-pc-windows-gnu

# 5. Set this installed toolchain as the default for the rest of the build.
rustup default $RUSTUP_TOOLCHAIN
export CC_x86_64_pc_windows_gnu="%mingw64_cc"
cargo build --target=x86_64-pc-windows-gnu

# This will copy the files generated by the `make` command above into
# the installable rpm package.
%install


# This lists all the files that are included in the rpm package and that
# are going to be installed into target system where the rpm is installed.
%files
/usr/bin/me3

# Finally, changes from the latest release of your application are generated from
# your project's Git history. It will be empty until you make first annotated Git tag.
%changelog